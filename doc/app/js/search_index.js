var search_data = {"index":{"searchIndex":["ability","accessoriescontroller","accessorisation","accessory","address","addresscontroller","admin","accessoriescontroller","admincontroller","categoriescontroller","countries","zonescontroller","countriescontroller","orderscontroller","products","attachmentscontroller","skus","attributetypescontroller","stocklevelscontroller","skuscontroller","tagscontroller","productscontroller","shippings","tierscontroller","shippingscontroller","transactionscontroller","userscontroller","applicationcontroller","applicationhelper","attachment","attributetype","basepreview","cart","cartitem","cartitemaccessory","cartitemscontroller","categoriescontroller","category","categoryhelper","country","deepstruct","destination","errorscontroller","fileuploader","mailatron4000","orders","stock","notification","notificationscontroller","order","orderhelper","orderitem","orderitemaccessory","ordermailer","ordermailerpreview","orders","buildcontroller","orderscontroller","payatron4000","generic","paypal","product","producthelper","productscontroller","relatedproduct","role","search","searchcontroller","shipping","shippingmailer","shippingmailerpreview","shippingscontroller","sku","skuscontroller","stocklevel","stockmailer","stockmailerpreview","store","storecontroller","storesetting","tag","tagging","tier","tiervalidator","tiered","transaction","user","users","registrationscontroller","sessionscontroller","zone","zonification","about()","accessory_details()","activate!()","activate!()","activate!()","activate!()","active()","active()","active()","active()","active?()","active_category?()","active_controller?()","active_or_billing?()","active_or_payment?()","active_or_shipping?()","active_page?()","add()","add_cart_item()","add_foreign_field()","adjustment_value()","admin_permissions()","after_sign_out_path_for()","assign_paypal_token()","autocomplete()","bank_transfer()","breadcrumb_add()","calculate()","category_list()","check_permissions()","cheque()","coloured_row()","complete()","complete()","complete()","complete()","completed?()","confirmation_email()","contact()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_admin_breadcrumbs()","create_store_breadcrumbs()","current_cart()","dashboard()","decrement_cart_item_quantity()","default_url()","del()","delayed()","delayed()","delayed_shipping()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_cart()","dispatch_all()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","errors_for()","express()","express_items()","express_purchase_options()","express_setup_options()","extension_white_list()","failed()","failure()","format_currency()","full_name()","full_name()","full_sku()","gross_price()","guest_permissions()","inactivate!()","inactivate!()","inactivate!()","inactivate!()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","javascript()","link_to_add_fields()","link_to_remove_fields()","low()","low()","mock_order()","mock_sku()","mock_skus()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_sku?()","notification()","notification()","notification_sent()","notify()","payment_status()","paypal_ipn()","pending()","pending()","positive?()","price_range()","purchase()","purge()","received()","received()","render_breadcrumbs()","reset_settings()","results()","role?()","search_data()","select_address()","settings()","settings()","ship_order_today()","shipping()","shipping_date_nil?()","shipping_status()","show()","show()","show()","show()","show()","single_product()","single_sku?()","singularize_price()","sku_attribute_values()","status_code()","stock_level_adjustment()","stock_update()","stock_values()","store_breadcrumb_add()","store_dir()","success()","successful()","successful()","table_commands()","tax_rate()","tier()","to_h()","total_price()","total_price()","total_price()","transfer()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update_quantity()","update_weight()","user_permissions()","validate_each()","warning()","readme_for_app"],"longSearchIndex":["ability","accessoriescontroller","accessorisation","accessory","address","addresscontroller","admin","admin::accessoriescontroller","admin::admincontroller","admin::categoriescontroller","admin::countries","admin::countries::zonescontroller","admin::countriescontroller","admin::orderscontroller","admin::products","admin::products::attachmentscontroller","admin::products::skus","admin::products::skus::attributetypescontroller","admin::products::skus::stocklevelscontroller","admin::products::skuscontroller","admin::products::tagscontroller","admin::productscontroller","admin::shippings","admin::shippings::tierscontroller","admin::shippingscontroller","admin::transactionscontroller","admin::userscontroller","applicationcontroller","applicationhelper","attachment","attributetype","basepreview","cart","cartitem","cartitemaccessory","cartitemscontroller","categoriescontroller","category","categoryhelper","country","deepstruct","destination","errorscontroller","fileuploader","mailatron4000","mailatron4000::orders","mailatron4000::stock","notification","notificationscontroller","order","orderhelper","orderitem","orderitemaccessory","ordermailer","ordermailerpreview","orders","orders::buildcontroller","orderscontroller","payatron4000","payatron4000::generic","payatron4000::paypal","product","producthelper","productscontroller","relatedproduct","role","search","searchcontroller","shipping","shippingmailer","shippingmailerpreview","shippingscontroller","sku","skuscontroller","stocklevel","stockmailer","stockmailerpreview","store","storecontroller","storesetting","tag","tagging","tier","tiervalidator","tiered","transaction","user","users","users::registrationscontroller","users::sessionscontroller","zone","zonification","storecontroller#about()","producthelper#accessory_details()","accessory#activate!()","product#activate!()","shipping#activate!()","sku#activate!()","accessory::active()","product::active()","shipping::active()","sku::active()","order#active?()","applicationhelper#active_category?()","applicationhelper#active_controller?()","order#active_or_billing?()","order#active_or_payment?()","order#active_or_shipping?()","applicationhelper#active_page?()","tag::add()","cart#add_cart_item()","applicationhelper#add_foreign_field()","stocklevel#adjustment_value()","ability#admin_permissions()","applicationcontroller#after_sign_out_path_for()","payatron4000::paypal::assign_paypal_token()","searchcontroller#autocomplete()","orders::buildcontroller#bank_transfer()","applicationhelper#breadcrumb_add()","order#calculate()","applicationcontroller#category_list()","users::registrationscontroller#check_permissions()","orders::buildcontroller#cheque()","producthelper#coloured_row()","payatron4000::generic::complete()","payatron4000::paypal::complete()","shippingmailer#complete()","shippingmailerpreview#complete()","order#completed?()","payatron4000::confirmation_email()","storecontroller#contact()","admin::accessoriescontroller#create()","admin::categoriescontroller#create()","admin::countries::zonescontroller#create()","admin::countriescontroller#create()","admin::products::skus::attributetypescontroller#create()","admin::products::skus::stocklevelscontroller#create()","admin::productscontroller#create()","admin::shippings::tierscontroller#create()","admin::shippingscontroller#create()","cartitemscontroller#create()","notificationscontroller#create()","applicationhelper#create_admin_breadcrumbs()","applicationhelper#create_store_breadcrumbs()","applicationcontroller#current_cart()","admin::admincontroller#dashboard()","cart#decrement_cart_item_quantity()","fileuploader#default_url()","tag::del()","shippingmailer#delayed()","shippingmailerpreview#delayed()","order#delayed_shipping()","admin::accessoriescontroller#destroy()","admin::categoriescontroller#destroy()","admin::countries::zonescontroller#destroy()","admin::countriescontroller#destroy()","admin::products::attachmentscontroller#destroy()","admin::products::skus::attributetypescontroller#destroy()","admin::products::skuscontroller#destroy()","admin::productscontroller#destroy()","admin::shippings::tierscontroller#destroy()","admin::shippingscontroller#destroy()","cartitemscontroller#destroy()","payatron4000::destroy_cart()","mailatron4000::orders::dispatch_all()","admin::accessoriescontroller#edit()","admin::categoriescontroller#edit()","admin::countries::zonescontroller#edit()","admin::countriescontroller#edit()","admin::orderscontroller#edit()","admin::products::skus::attributetypescontroller#edit()","admin::products::skuscontroller#edit()","admin::productscontroller#edit()","admin::shippings::tierscontroller#edit()","admin::shippingscontroller#edit()","admin::transactionscontroller#edit()","admin::userscontroller#edit()","applicationhelper#errors_for()","orders::buildcontroller#express()","payatron4000::paypal::express_items()","payatron4000::paypal::express_purchase_options()","payatron4000::paypal::express_setup_options()","fileuploader#extension_white_list()","payatron4000::paypal::failed()","orders::buildcontroller#failure()","applicationhelper#format_currency()","address#full_name()","user#full_name()","sku#full_sku()","applicationhelper#gross_price()","ability#guest_permissions()","accessory#inactivate!()","product#inactivate!()","shipping#inactivate!()","sku#inactivate!()","admin::accessoriescontroller#index()","admin::categoriescontroller#index()","admin::countries::zonescontroller#index()","admin::countriescontroller#index()","admin::orderscontroller#index()","admin::products::skus::attributetypescontroller#index()","admin::products::tagscontroller#index()","admin::productscontroller#index()","admin::shippings::tierscontroller#index()","admin::shippingscontroller#index()","storecontroller#index()","applicationhelper#javascript()","applicationhelper#link_to_add_fields()","applicationhelper#link_to_remove_fields()","stockmailer#low()","stockmailerpreview#low()","basepreview#mock_order()","basepreview#mock_sku()","basepreview#mock_skus()","ability::new()","admin::accessoriescontroller#new()","admin::categoriescontroller#new()","admin::countries::zonescontroller#new()","admin::countriescontroller#new()","admin::products::skus::attributetypescontroller#new()","admin::products::skus::stocklevelscontroller#new()","admin::productscontroller#new()","admin::shippings::tierscontroller#new()","admin::shippingscontroller#new()","deepstruct::new()","orderscontroller#new()","sku#new_sku?()","stockmailer#notification()","stockmailerpreview#notification()","mailatron4000::notification_sent()","mailatron4000::stock::notify()","orderhelper#payment_status()","admin::transactionscontroller#paypal_ipn()","ordermailer#pending()","ordermailerpreview#pending()","store::positive?()","categoryhelper#price_range()","orders::buildcontroller#purchase()","orders::buildcontroller#purge()","ordermailer#received()","ordermailerpreview#received()","applicationhelper#render_breadcrumbs()","store::reset_settings()","searchcontroller#results()","user#role?()","product#search_data()","payatron4000::select_address()","admin::admincontroller#settings()","store::settings()","order#ship_order_today()","admin::orderscontroller#shipping()","order#shipping_date_nil?()","orderhelper#shipping_status()","admin::orderscontroller#show()","categoriescontroller#show()","errorscontroller#show()","orders::buildcontroller#show()","productscontroller#show()","product#single_product()","sku#single_sku?()","payatron4000::singularize_price()","producthelper#sku_attribute_values()","errorscontroller#status_code()","stocklevel#stock_level_adjustment()","payatron4000::stock_update()","sku#stock_values()","applicationhelper#store_breadcrumb_add()","fileuploader#store_dir()","orders::buildcontroller#success()","payatron4000::generic::successful()","payatron4000::paypal::successful()","applicationhelper#table_commands()","store::tax_rate()","order#tier()","deepstruct#to_h()","cart#total_price()","cartitem#total_price()","orderitem#total_price()","order#transfer()","accessoriescontroller#update()","admin::accessoriescontroller#update()","admin::admincontroller#update()","admin::categoriescontroller#update()","admin::countries::zonescontroller#update()","admin::countriescontroller#update()","admin::orderscontroller#update()","admin::products::skus::attributetypescontroller#update()","admin::products::skuscontroller#update()","admin::productscontroller#update()","admin::shippings::tierscontroller#update()","admin::shippingscontroller#update()","admin::transactionscontroller#update()","admin::userscontroller#update()","cartitemscontroller#update()","orders::buildcontroller#update()","shippingscontroller#update()","skuscontroller#update()","cartitem#update_quantity()","cartitem#update_weight()","ability#user_permissions()","tiervalidator#validate_each()","mailatron4000::stock::warning()",""],"info":[["Ability","","Ability.html","","<p>Ability documentation\n<p>The ability class defines the user types and permission within your\napplication. …\n"],["AccessoriesController","","AccessoriesController.html","",""],["Accessorisation","","Accessorisation.html","","<p>Schema Information\n<p>Table name: accessorisations\n\n<pre>id               :integer          not null, primary key ...</pre>\n"],["Accessory","","Accessory.html","","<p>Schema Information\n<p>Table name: accessories\n\n<pre>id               :integer          not null, primary key\nname ...</pre>\n"],["Address","","Address.html","","<p>Schema Information\n<p>Table name: addresses\n\n<pre>id                       :integer          not null, primary key ...</pre>\n"],["AddressController","","AddressController.html","",""],["Admin","","Admin.html","",""],["Admin::AccessoriesController","","Admin/AccessoriesController.html","",""],["Admin::AdminController","","Admin/AdminController.html","",""],["Admin::CategoriesController","","Admin/CategoriesController.html","",""],["Admin::Countries","","Admin/Countries.html","",""],["Admin::Countries::ZonesController","","Admin/Countries/ZonesController.html","",""],["Admin::CountriesController","","Admin/CountriesController.html","",""],["Admin::OrdersController","","Admin/OrdersController.html","",""],["Admin::Products","","Admin/Products.html","",""],["Admin::Products::AttachmentsController","","Admin/Products/AttachmentsController.html","",""],["Admin::Products::Skus","","Admin/Products/Skus.html","",""],["Admin::Products::Skus::AttributeTypesController","","Admin/Products/Skus/AttributeTypesController.html","",""],["Admin::Products::Skus::StockLevelsController","","Admin/Products/Skus/StockLevelsController.html","",""],["Admin::Products::SkusController","","Admin/Products/SkusController.html","",""],["Admin::Products::TagsController","","Admin/Products/TagsController.html","",""],["Admin::ProductsController","","Admin/ProductsController.html","",""],["Admin::Shippings","","Admin/Shippings.html","",""],["Admin::Shippings::TiersController","","Admin/Shippings/TiersController.html","",""],["Admin::ShippingsController","","Admin/ShippingsController.html","",""],["Admin::TransactionsController","","Admin/TransactionsController.html","",""],["Admin::UsersController","","Admin/UsersController.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Attachment","","Attachment.html","","<p>Schema Information\n<p>Table name: attachments\n\n<pre>id                 :integer          not null, primary key\nattachable_id ...</pre>\n"],["AttributeType","","AttributeType.html","","<p>Schema Information\n<p>Table name: attribute_types\n\n<pre>id             :integer          not null, primary key\nname ...</pre>\n"],["BasePreview","","BasePreview.html","","<p>Base preview class contains mock objects for the email previews\n"],["Cart","","Cart.html","","<p>Schema Information\n<p>Table name: carts\n\n<pre>id             :integer          not null, primary key\ncreated_at ...</pre>\n"],["CartItem","","CartItem.html","","<p>Schema Information\n<p>Table name: cart_items\n\n<pre>id             :integer          not null, primary key\ncart_id ...</pre>\n"],["CartItemAccessory","","CartItemAccessory.html","","<p>Schema Information\n<p>Table name: cart_item_accessories\n\n<pre>id                   :integer          not null, primary ...</pre>\n"],["CartItemsController","","CartItemsController.html","",""],["CategoriesController","","CategoriesController.html","",""],["Category","","Category.html","","<p>Schema Information\n<p>Table name: categories\n\n<pre>id             :integer          not null, primary key\nname  ...</pre>\n"],["CategoryHelper","","CategoryHelper.html","",""],["Country","","Country.html","","<p>Schema Information\n<p>Table name: countries\n\n<pre>id                   :integer          not null, primary key\nname ...</pre>\n"],["DeepStruct","","DeepStruct.html","","<p>DeepStruct documentation\n<p>Inherits from OpenStruct to convert a hash to an object, including nested\nvalues …\n"],["Destination","","Destination.html","","<p>Schema Information\n<p>Table name: destinations\n\n<pre>id             :integer          not null, primary key\nzone_id ...</pre>\n"],["ErrorsController","","ErrorsController.html","",""],["FileUploader","","FileUploader.html","",""],["Mailatron4000","","Mailatron4000.html","",""],["Mailatron4000::Orders","","Mailatron4000/Orders.html","",""],["Mailatron4000::Stock","","Mailatron4000/Stock.html","",""],["Notification","","Notification.html","","<p>Schema Information\n<p>Table name: notifications\n\n<pre>id                   :integer          not null, primary key ...</pre>\n"],["NotificationsController","","NotificationsController.html","",""],["Order","","Order.html","","<p>Schema Information\n<p>Table name: orders\n\n<pre>id                       :integer          not null, primary key ...</pre>\n"],["OrderHelper","","OrderHelper.html","",""],["OrderItem","","OrderItem.html","","<p>Schema Information\n<p>Table name: order_items\n\n<pre>id             :integer          not null, primary key\norder_id ...</pre>\n"],["OrderItemAccessory","","OrderItemAccessory.html","","<p>Schema Information\n<p>Table name: cart_item_accessories\n\n<pre>id                   :integer          not null, primary ...</pre>\n"],["OrderMailer","","OrderMailer.html","",""],["OrderMailerPreview","","OrderMailerPreview.html","",""],["Orders","","Orders.html","",""],["Orders::BuildController","","Orders/BuildController.html","",""],["OrdersController","","OrdersController.html","",""],["Payatron4000","","Payatron4000.html","",""],["Payatron4000::Generic","","Payatron4000/Generic.html","",""],["Payatron4000::Paypal","","Payatron4000/Paypal.html","",""],["Product","","Product.html","","<p>Schema Information\n<p>Table name: products\n\n<pre>id                       :integer          not null, primary key ...</pre>\n"],["ProductHelper","","ProductHelper.html","",""],["ProductsController","","ProductsController.html","",""],["RelatedProduct","","RelatedProduct.html","","<p>Schema Information\n<p>Table name: related_products\n\n<pre>id             :integer          not null, primary key ...</pre>\n"],["Role","","Role.html","",""],["Search","","Search.html","",""],["SearchController","","SearchController.html","",""],["Shipping","","Shipping.html","","<p>Schema Information\n<p>Table name: shippings\n\n<pre>id             :integer          not null, primary key\nname   ...</pre>\n"],["ShippingMailer","","ShippingMailer.html","",""],["ShippingMailerPreview","","ShippingMailerPreview.html","",""],["ShippingsController","","ShippingsController.html","",""],["Sku","","Sku.html","","<p>Schema Information\n<p>Table name: skus\n\n<pre>id                         :integer          not null, primary key ...</pre>\n"],["SkusController","","SkusController.html","",""],["StockLevel","","StockLevel.html","","<p>Schema Information\n<p>Table name: stock_levels\n\n<pre>id                   :integer            not null, primary ...</pre>\n"],["StockMailer","","StockMailer.html","",""],["StockMailerPreview","","StockMailerPreview.html","",""],["Store","","Store.html","",""],["StoreController","","StoreController.html","",""],["StoreSetting","","StoreSetting.html","","<p>Schema Information\n<p>Table name: store_settings\n\n<pre>id                       :integer                not null, ...</pre>\n"],["Tag","","Tag.html","","<p>Schema Information\n<p>Table name: tags\n\n<pre>id             :integer          not null, primary key\nname        ...</pre>\n"],["Tagging","","Tagging.html","","<p>Schema Information\n<p>Table name: taggings\n\n<pre>id             :integer          not null, primary key\nproduct_id ...</pre>\n"],["Tier","","Tier.html","","<p>Schema Information\n<p>Table name: tiers\n\n<pre>id                  :integer          not null, primary key\nlength_start ...</pre>\n"],["TierValidator","","TierValidator.html","",""],["Tiered","","Tiered.html","","<p>Schema Information\n<p>Table name: tiereds\n\n<pre>id             :integer          not null, primary key\ntier_id  ...</pre>\n"],["Transaction","","Transaction.html","","<p>Schema Information\n<p>Table name: transactions\n\n<pre>id                           :integer          not null, primary ...</pre>\n"],["User","","User.html","","<p>Schema Information\n<p>Table name: users\n\n<pre>id                           :integer            not null, primary ...</pre>\n"],["Users","","Users.html","",""],["Users::RegistrationsController","","Users/RegistrationsController.html","",""],["Users::SessionsController","","Users/SessionsController.html","",""],["Zone","","Zone.html","","<p>Schema Information\n<p>Table name: zones\n\n<pre>id             :integer          not null, primary key\nname       ...</pre>\n"],["Zonification","","Zonification.html","","<p>Schema Information\n<p>Table name: zonifications\n\n<pre>id             :integer          not null, primary key\ncountry_id ...</pre>\n"],["about","StoreController","StoreController.html#method-i-about","()",""],["accessory_details","ProductHelper","ProductHelper.html#method-i-accessory_details","(accessory)",""],["activate!","Accessory","Accessory.html#method-i-activate-21","()","<p>Sets the related record&#39;s active field as true\n<p>@return [object]\n"],["activate!","Product","Product.html#method-i-activate-21","()","<p>Sets the related record&#39;s active field as true\n<p>@return [object]\n"],["activate!","Shipping","Shipping.html#method-i-activate-21","()","<p>Sets the related record&#39;s active field as true\n<p>@return [object]\n"],["activate!","Sku","Sku.html#method-i-activate-21","()","<p>Sets the related record&#39;s active field as true\n<p>@return [object]\n"],["active","Accessory","Accessory.html#method-c-active","()","<p>Grabs an array of records which have their active field set to true\n<p>@return [array]\n"],["active","Product","Product.html#method-c-active","()","<p>Grabs an array of records which have their active field set to true\n<p>@return [array]\n"],["active","Shipping","Shipping.html#method-c-active","()","<p>Grabs an array of records which have their active field set to true\n<p>@return [array]\n"],["active","Sku","Sku.html#method-c-active","()","<p>Grabs an array of records which have their active field set to true\n<p>@return [array]\n"],["active?","Order","Order.html#method-i-active-3F","()","<p>Detects if the current status of the order is &#39;active&#39;. Inactive\norders are deleted on a daily …\n"],["active_category?","ApplicationHelper","ApplicationHelper.html#method-i-active_category-3F","(id)","<p>Either the id or category_id value from the parameters hash is assigned to\nan instance variable If the …\n"],["active_controller?","ApplicationHelper","ApplicationHelper.html#method-i-active_controller-3F","(controller)","<p>If the string parameter equals the current controller value in the\nparameters hash, return a string\n<p>@parameter …\n"],["active_or_billing?","Order","Order.html#method-i-active_or_billing-3F","()","<p>Detects if the current status of the order is &#39;billing&#39;. See wicked\ngem for more info\n<p>@return …\n"],["active_or_payment?","Order","Order.html#method-i-active_or_payment-3F","()","<p>Detects if the current status of the order is &#39;payment&#39;. See wicked\ngem for more info\n<p>@return …\n"],["active_or_shipping?","Order","Order.html#method-i-active_or_shipping-3F","()","<p>Detects if the current status of the order is &#39;shipping&#39;. See\nwicked gem for more info\n<p>@return …\n"],["active_page?","ApplicationHelper","ApplicationHelper.html#method-i-active_page-3F","(controller, action)","<p>If the controller and action values from the parameter hash are equal to\nthe parameters Return a string …\n"],["add","Tag","Tag.html#method-c-add","(value, product_id)","<p>Creates or updates the list of tags for an object\n<p>@return [array]\n"],["add_cart_item","Cart","Cart.html#method-i-add_cart_item","(sku, item_quantity, accessory)","<p>Adds a new cart item or increases the quantity and weight of a cart item -\nincluding any assocated accessories …\n"],["add_foreign_field","ApplicationHelper","ApplicationHelper.html#method-i-add_foreign_field","(f, association)","<p>Add a single form field object to the DOM\n<p>@parameter [object, object] @return [object]\n"],["adjustment_value","StockLevel","StockLevel.html#method-i-adjustment_value","()","<p>Validation to check whether the adjustment value is above or below zero\n<p>@return [boolean]\n"],["admin_permissions","Ability","Ability.html#method-i-admin_permissions","(user)",""],["after_sign_out_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_out_path_for","(resource_or_scope)",""],["assign_paypal_token","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-assign_paypal_token","(token, payer_id, session, order)","<p>Assign PayPal token to order after user logs into their account\n<p>@parameter [string, integer, hash object, …\n"],["autocomplete","SearchController","SearchController.html#method-i-autocomplete","()",""],["bank_transfer","Orders::BuildController","Orders/BuildController.html#method-i-bank_transfer","()","<p>Payment method for a bank transfer, which sets the payment_type session\nvalue to Bank tranfer Redirect …\n"],["breadcrumb_add","ApplicationHelper","ApplicationHelper.html#method-i-breadcrumb_add","(title, url)","<p>Add a new breadcrumb to the administration area breadcrumb object using the\nparameters\n<p>@parameter [string, …\n"],["calculate","Order","Order.html#method-i-calculate","(cart, current_tax_rate)","<p>Update the current order&#39;s net_amount, tax_amount and gross_amount\nattribute values\n<p>@parameter [hash …\n"],["category_list","ApplicationController","ApplicationController.html#method-i-category_list","()",""],["check_permissions","Users::RegistrationsController","Users/RegistrationsController.html#method-i-check_permissions","()",""],["cheque","Orders::BuildController","Orders/BuildController.html#method-i-cheque","()","<p>Payment method for a cheque, which sets the payment_type session value to\nCheque Redirect to last step …\n"],["coloured_row","ProductHelper","ProductHelper.html#method-i-coloured_row","(adjustment)",""],["complete","Payatron4000::Generic","Payatron4000/Generic.html#method-c-complete","(order, payment_type, session, steps)","<p>Completes the order process by creating a transaction record, sending a\nconfirmation email and redirects …\n"],["complete","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-complete","(order, session, steps)","<p>Completes the order process by communicating with PayPal; receives a\nresponse and in turn creates the …\n"],["complete","ShippingMailer","ShippingMailer.html#method-i-complete","(order)","<p>Deliver an email to the customer when an order has been shipped\n<p>@parameter [object]\n"],["complete","ShippingMailerPreview","ShippingMailerPreview.html#method-i-complete","()",""],["completed?","Order","Order.html#method-i-completed-3F","()","<p>Returns a boolean on whether the order is marked as completed\n<p>@return [boolean]\n"],["confirmation_email","Payatron4000","Payatron4000.html#method-c-confirmation_email","(order, payment_status)","<p>Depending on the payment_status of the order, the relevant email template\nis sent\n<p>@parameter [hash object, …\n"],["contact","StoreController","StoreController.html#method-i-contact","()",""],["create","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-create","()","<p>POST /accessories POST /accessories.json\n"],["create","Admin::CategoriesController","Admin/CategoriesController.html#method-i-create","()","<p>POST /categories POST /categories.json\n"],["create","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-create","()","<p>POST /zones POST /zones.json\n"],["create","Admin::CountriesController","Admin/CountriesController.html#method-i-create","()","<p>POST /countries POST /countries.json\n"],["create","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-create","()","<p>POST /attribute_types POST /attribute_types.json\n"],["create","Admin::Products::Skus::StockLevelsController","Admin/Products/Skus/StockLevelsController.html#method-i-create","()",""],["create","Admin::ProductsController","Admin/ProductsController.html#method-i-create","()","<p>POST /products POST /products.json\n"],["create","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-create","()","<p>POST /tiers POST /tiers.json\n"],["create","Admin::ShippingsController","Admin/ShippingsController.html#method-i-create","()","<p>POST /shippings POST /shippings.json\n"],["create","CartItemsController","CartItemsController.html#method-i-create","()","<p>POST /cart_items POST /cart_items.json\n"],["create","NotificationsController","NotificationsController.html#method-i-create","()",""],["create_admin_breadcrumbs","ApplicationHelper","ApplicationHelper.html#method-i-create_admin_breadcrumbs","()","<p>Create a new object to start building breadcrumbs for the administration\narea\n<p>@return [object]\n"],["create_store_breadcrumbs","ApplicationHelper","ApplicationHelper.html#method-i-create_store_breadcrumbs","()","<p>Create a new object to start building breadcrumbs for the storefront\n<p>@return [object]\n"],["current_cart","ApplicationController","ApplicationController.html#method-i-current_cart","()",""],["dashboard","Admin::AdminController","Admin/AdminController.html#method-i-dashboard","()",""],["decrement_cart_item_quantity","Cart","Cart.html#method-i-decrement_cart_item_quantity","(cart_item_id)","<p>Decreases the quantity and weight of a cart item, including any associated\naccessories\n<p>@return [object] …\n"],["default_url","FileUploader","FileUploader.html#method-i-default_url","()","<p>Provide a default URL as a default if there hasn&#39;t been a file\nuploaded:\n"],["del","Tag","Tag.html#method-c-del","(value, product_id)","<p>Deletes all tags associated to the product if the string is blank. Or\ndeletes tags not contained within …\n"],["delayed","ShippingMailer","ShippingMailer.html#method-i-delayed","(order)","<p>Deliver an email to the customer when an order has been delayed This is\nonly triggered when a shipping …\n"],["delayed","ShippingMailerPreview","ShippingMailerPreview.html#method-i-delayed","()",""],["delayed_shipping","Order","Order.html#method-i-delayed_shipping","()","<p>If you set the shipping date for an order more than once, send a delayed\nshipping email\n"],["destroy","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-destroy","()","<p>Destroying an accessory\n<p>Various if statements to handle how a Accessory is dealt with then checking\norder …\n"],["destroy","Admin::CategoriesController","Admin/CategoriesController.html#method-i-destroy","()","<p>DELETE /categories/1 DELETE /categories/1.json\n"],["destroy","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-destroy","()","<p>DELETE /zones/1 DELETE /zones/1.json\n"],["destroy","Admin::CountriesController","Admin/CountriesController.html#method-i-destroy","()","<p>DELETE /countries/1 DELETE /countries/1.json\n"],["destroy","Admin::Products::AttachmentsController","Admin/Products/AttachmentsController.html#method-i-destroy","()","<p>DELETE /attachments/1 DELETE /attachments/1.json\n"],["destroy","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-destroy","()","<p>DELETE /attribute_types/1 DELETE /attribute_types/1.json\n"],["destroy","Admin::Products::SkusController","Admin/Products/SkusController.html#method-i-destroy","()","<p>Destroying a SKU\n<p>Various if statements to handle how a SKU is dealt with then checking order\nand cart …\n"],["destroy","Admin::ProductsController","Admin/ProductsController.html#method-i-destroy","()","<p>Destroying a product\n<p>Various if statements to handle how a product is dealt with then checking\norder and …\n"],["destroy","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-destroy","()","<p>DELETE /tiers/1 DELETE /tiers/1.json\n"],["destroy","Admin::ShippingsController","Admin/ShippingsController.html#method-i-destroy","()","<p>Destroying a shipping\n<p>If no associated order records, destroy the shipping. Else set it to\ninactive.\n"],["destroy","CartItemsController","CartItemsController.html#method-i-destroy","()","<p>DELETE /cart_items/1 DELETE /cart_items/1.json\n"],["destroy_cart","Payatron4000","Payatron4000.html#method-c-destroy_cart","(session)","<p>Destroys the cart and any associated cart_item &amp; cart_items_accesory\nrecords and sets the cart_id …\n"],["dispatch_all","Mailatron4000::Orders","Mailatron4000/Orders.html#method-c-dispatch_all","()",""],["edit","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-edit","()","<p>GET /accessories/1/edit\n"],["edit","Admin::CategoriesController","Admin/CategoriesController.html#method-i-edit","()","<p>GET /categories/1/edit\n"],["edit","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-edit","()","<p>GET /zones/1/edit\n"],["edit","Admin::CountriesController","Admin/CountriesController.html#method-i-edit","()","<p>GET /countries/1/edit\n"],["edit","Admin::OrdersController","Admin/OrdersController.html#method-i-edit","()",""],["edit","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-edit","()","<p>GET /attribute_types/1/edit\n"],["edit","Admin::Products::SkusController","Admin/Products/SkusController.html#method-i-edit","()",""],["edit","Admin::ProductsController","Admin/ProductsController.html#method-i-edit","()",""],["edit","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-edit","()","<p>GET /tiers/1/edit\n"],["edit","Admin::ShippingsController","Admin/ShippingsController.html#method-i-edit","()","<p>GET /shippings/1/edit\n"],["edit","Admin::TransactionsController","Admin/TransactionsController.html#method-i-edit","()",""],["edit","Admin::UsersController","Admin/UsersController.html#method-i-edit","()",""],["errors_for","ApplicationHelper","ApplicationHelper.html#method-i-errors_for","(model, attribute)","<p>Creates HTML elements and an error associated with the attribute, if one\nexists\n<p>@parameter [object, object] …\n"],["express","Orders::BuildController","Orders/BuildController.html#method-i-express","()","<p>Prepares the order data and redirects to the PayPal login page to review\nthe order Set the payment_type …\n"],["express_items","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-express_items","(cart)","<p>Creates an aray of items which represent cart_items This is passed into the\nexpress_setup_options method …\n"],["express_purchase_options","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-express_purchase_options","(order)","<p>Creates the payment information object for PayPal to parse in the\nconfirmation step and complete the …\n"],["express_setup_options","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-express_setup_options","(order, steps, cart, ip_address, return_url, cancel_url)","<p>Creates the payment information object for PayPal to parse in the login\nstep\n<p>@parameter [hash object, …\n"],["extension_white_list","FileUploader","FileUploader.html#method-i-extension_white_list","()","<p>Add a white list of extensions which are allowed to be uploaded. For images\nyou might use something like …\n"],["failed","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-failed","(response, order)","<p>When an order has failed to complete, a new transaction record is created\nwith a logged status reason …\n"],["failure","Orders::BuildController","Orders/BuildController.html#method-i-failure","()","<p>Renders the failed order page, however redirected if the order payment\nstautus it not Failed\n"],["format_currency","ApplicationHelper","ApplicationHelper.html#method-i-format_currency","(price)",""],["full_name","Address","Address.html#method-i-full_name","()","<p>Combines the first and last name of an address\n<p>@return [string]\n"],["full_name","User","User.html#method-i-full_name","()","<p>Combines the first and last name of a profile\n<p>@return [string]\n"],["full_sku","Sku","Sku.html#method-i-full_sku","()","<p>Joins the parent product SKU and the current SKU with a hyphen\n<p>@return [string]\n"],["gross_price","ApplicationHelper","ApplicationHelper.html#method-i-gross_price","(net_price)","<p>Returns a string of a formatted currency, using the currency unit and tax\nrate set in the Store settings …\n"],["guest_permissions","Ability","Ability.html#method-i-guest_permissions","(user)",""],["inactivate!","Accessory","Accessory.html#method-i-inactivate-21","()","<p>Sets the related record&#39;s active field as false\n<p>@return [object]\n"],["inactivate!","Product","Product.html#method-i-inactivate-21","()","<p>Sets the related record&#39;s active field as false\n<p>@return [object]\n"],["inactivate!","Shipping","Shipping.html#method-i-inactivate-21","()","<p>Sets the related record&#39;s active field as false\n<p>@return [object]\n"],["inactivate!","Sku","Sku.html#method-i-inactivate-21","()","<p>Sets the related record&#39;s active field as false\n<p>@return [object]\n"],["index","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-index","()","<p>GET /accessories GET /accessories.json\n"],["index","Admin::CategoriesController","Admin/CategoriesController.html#method-i-index","()","<p>GET /categories GET /categories.json\n"],["index","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-index","()","<p>GET /zones GET /zones.json\n"],["index","Admin::CountriesController","Admin/CountriesController.html#method-i-index","()","<p>GET /countries GET /countries.json\n"],["index","Admin::OrdersController","Admin/OrdersController.html#method-i-index","()","<p>GET /orders GET /orders.json\n"],["index","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-index","()","<p>GET /attribute_types GET /attribute_types.json\n"],["index","Admin::Products::TagsController","Admin/Products/TagsController.html#method-i-index","()","<p>A JSON index of all the tags in the database for the tagsinput typeahead\nfunctionality\n<p>@return [JSON object] …\n"],["index","Admin::ProductsController","Admin/ProductsController.html#method-i-index","()","<p>GET /products GET /products.json\n"],["index","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-index","()","<p>GET /tiers GET /tiers.json\n"],["index","Admin::ShippingsController","Admin/ShippingsController.html#method-i-index","()","<p>GET /shippings GET /shippings.json\n"],["index","StoreController","StoreController.html#method-i-index","()",""],["javascript","ApplicationHelper","ApplicationHelper.html#method-i-javascript","(*files)","<p>Creates a JavaScript tag, targeting the associated JavaScript file within\nthe asset pipeline This method …\n"],["link_to_add_fields","ApplicationHelper","ApplicationHelper.html#method-i-link_to_add_fields","(name, f, association, target, tooltip)","<p>Create a new form field object and trigger the associated JavaScript to add\nthe field elements to the …\n"],["link_to_remove_fields","ApplicationHelper","ApplicationHelper.html#method-i-link_to_remove_fields","(name, f, obj)","<p>Destroy generated form field object and trigger the associated JavaScript\nfunction to remove it from …\n"],["low","StockMailer","StockMailer.html#method-i-low","(products)","<p>Deliver an email detailing a collection of products which are low on stock\nto the administrator\n<p>@parameter …\n"],["low","StockMailerPreview","StockMailerPreview.html#method-i-low","()",""],["mock_order","BasePreview","BasePreview.html#method-i-mock_order","()","<p>Last order record in the database which has it&#39;s status set to active\n<p>@return [object]\n"],["mock_sku","BasePreview","BasePreview.html#method-i-mock_sku","()","<p>Last SKU record in the database which has it&#39;s active attribute set to\ntrue\n<p>@return [object]\n"],["mock_skus","BasePreview","BasePreview.html#method-i-mock_skus","()","<p>Array of the last 5 product records in the database\n<p>@return [array]\n"],["new","Ability","Ability.html#method-c-new","(user)",""],["new","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-new","()","<p>GET /accessories/new GET /accessories/new.json\n"],["new","Admin::CategoriesController","Admin/CategoriesController.html#method-i-new","()","<p>GET /categories/new GET /categories/new.json\n"],["new","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-new","()","<p>GET /zones/new GET /zones/new.json\n"],["new","Admin::CountriesController","Admin/CountriesController.html#method-i-new","()","<p>GET /countries/new GET /countries/new.json\n"],["new","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-new","()","<p>GET /attribute_types/new GET /attribute_types/new.json\n"],["new","Admin::Products::Skus::StockLevelsController","Admin/Products/Skus/StockLevelsController.html#method-i-new","()","<p>New stock level\n<p>Modal trigger for displaying a form to add a stock level adjustment\n"],["new","Admin::ProductsController","Admin/ProductsController.html#method-i-new","()","<p>GET /products/new GET /products/new.json\n"],["new","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-new","()","<p>GET /tiers/new GET /tiers/new.json\n"],["new","Admin::ShippingsController","Admin/ShippingsController.html#method-i-new","()","<p>GET /shippings/new GET /shippings/new.json\n"],["new","DeepStruct","DeepStruct.html#method-c-new","(hash=nil)",""],["new","OrdersController","OrdersController.html#method-i-new","()","<p>GET /orders/new GET /orders/new.json\n"],["new_sku?","Sku","Sku.html#method-i-new_sku-3F","()","<p>Validate wether the current record is new\n<p>@return [boolean]\n"],["notification","StockMailer","StockMailer.html#method-i-notification","(sku, email)","<p>Deliver an email to the customer when a product SKU is back in stock This\nis only triggered if the customer …\n"],["notification","StockMailerPreview","StockMailerPreview.html#method-i-notification","()",""],["notification_sent","Mailatron4000","Mailatron4000.html#method-c-notification_sent","(notification)","<p>Marks a notification as sent and records the time\n<p>@return [Mailatron4000::notification_sent] @parameter …\n"],["notify","Mailatron4000::Stock","Mailatron4000/Stock.html#method-c-notify","()",""],["payment_status","OrderHelper","OrderHelper.html#method-i-payment_status","(status)",""],["paypal_ipn","Admin::TransactionsController","Admin/TransactionsController.html#method-i-paypal_ipn","()","<p>Handler for incoming Instant Payment Notifications from paypal about orders\n"],["pending","OrderMailer","OrderMailer.html#method-i-pending","(order)","<p>Deliver an email to the customer when a payment is currently pending for an\norder This applys to the …\n"],["pending","OrderMailerPreview","OrderMailerPreview.html#method-i-pending","()",""],["positive?","Store","Store.html#method-c-positive-3F","(number)","<p>Detects whether an integer is positive\n<p>@return [boolean]\n"],["price_range","CategoryHelper","CategoryHelper.html#method-i-price_range","(product)",""],["purchase","Orders::BuildController","Orders/BuildController.html#method-i-purchase","()","<p>Transfers all the cart_items to new order_items (including\ncart_item_accessories =&gt; order_item_accessories …\n"],["purge","Orders::BuildController","Orders/BuildController.html#method-i-purge","()","<p>When an order has failed, the user has an option to delete the order\naltogether including addresses and …\n"],["received","OrderMailer","OrderMailer.html#method-i-received","(order)","<p>Deliver an email to the customer when an order has been received\n<p>@parameter [object]\n"],["received","OrderMailerPreview","OrderMailerPreview.html#method-i-received","()",""],["render_breadcrumbs","ApplicationHelper","ApplicationHelper.html#method-i-render_breadcrumbs","(type)","<p>Renders the HTML elements for the breadcrumbs\n<p>@parameter [integer] @return [string]\n"],["reset_settings","Store","Store.html#method-c-reset_settings","()","<p>Clears the store_settings class variable so they can be taken from the\ndatabase when next accessed\n<p>@return …\n"],["results","SearchController","SearchController.html#method-i-results","()",""],["role?","User","User.html#method-i-role-3F","(role)",""],["search_data","Product","Product.html#method-i-search_data","()","<p>Search paramters for elasticsearch\n<p>@return [nil]\n"],["select_address","Payatron4000","Payatron4000.html#method-c-select_address","(order_id, address_id)","<p>If address exists for an order, find and utilise it. If not, create a new\naddress record\n<p>@parameter [integer, …\n"],["settings","Admin::AdminController","Admin/AdminController.html#method-i-settings","()",""],["settings","Store","Store.html#method-c-settings","()","<p>Retrieves the store settings from the admin user\n<p>@return [Store::settings]\n"],["ship_order_today","Order","Order.html#method-i-ship_order_today","()","<p>When shipping date for an order is set, if it&#39;s today, mark the order\nas dispatched and send the …\n"],["shipping","Admin::OrdersController","Admin/OrdersController.html#method-i-shipping","()","<p>Set the shipping dispatch date for an order\n<p>@return [nil]\n"],["shipping_date_nil?","Order","Order.html#method-i-shipping_date_nil-3F","()","<p>Determines whether the shipping date of the current order is nil\n<p>@return [boolean]\n"],["shipping_status","OrderHelper","OrderHelper.html#method-i-shipping_status","(status)",""],["show","Admin::OrdersController","Admin/OrdersController.html#method-i-show","()","<p>GET /orders/1 GET /orders/1.json\n"],["show","CategoriesController","CategoriesController.html#method-i-show","()","<p>GET /categories/1 GET /categories/1.json\n"],["show","ErrorsController","ErrorsController.html#method-i-show","()",""],["show","Orders::BuildController","Orders/BuildController.html#method-i-show","()","<p>Displays the front-end content of each step, with specific methods\nthroughout providing the relevant …\n"],["show","ProductsController","ProductsController.html#method-i-show","()","<p>GET /products/1 GET /products/1.json\n"],["single_product","Product","Product.html#method-i-single_product","()","<p>Detects if a product has more than one SKU when attempting to set the\nsingle product field as true The …\n"],["single_sku?","Sku","Sku.html#method-i-single_sku-3F","()","<p>Validates the attribute_value and attribute_type_id if there is only one\nSKU associated with product …\n"],["singularize_price","Payatron4000","Payatron4000.html#method-c-singularize_price","(price)","<p>Convert a price into single digit currency\n<p>@parameter [decimal] @return [decimal]\n"],["sku_attribute_values","ProductHelper","ProductHelper.html#method-i-sku_attribute_values","(sku, single)",""],["status_code","ErrorsController","ErrorsController.html#method-i-status_code","()",""],["stock_level_adjustment","StockLevel","StockLevel.html#method-i-stock_level_adjustment","()","<p>Validation to check to prevent a negative stock value; if not the case\nmodify the sku stock with the …\n"],["stock_update","Payatron4000","Payatron4000.html#method-c-stock_update","(order)","<p>Creates a new stock level record for each order_item SKU, adding the order\nid to the description Also …\n"],["stock_values","Sku","Sku.html#method-i-stock_values","()","<p>Validation check to ensure the stock value is higher than the stock warning\nlevel value when creating …\n"],["store_breadcrumb_add","ApplicationHelper","ApplicationHelper.html#method-i-store_breadcrumb_add","(title, url)","<p>Add a new breadcrumb to the storefront breadcrumb object using the\nparameters\n<p>@parameter [string, string] …\n"],["store_dir","FileUploader","FileUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored. This is a\nsensible default for uploaders …\n"],["success","Orders::BuildController","Orders/BuildController.html#method-i-success","()","<p>Renders the successful order page, however redirected if the order payment\nstatus is not Pending or completed. …\n"],["successful","Payatron4000::Generic","Payatron4000/Generic.html#method-c-successful","(order, payment_type)","<p>Upon successfully completing an order a new transaction record is created,\nstock is updated for the relevant …\n"],["successful","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-successful","(response, order)","<p>Upon successfully completing an order with a PayPal payment option a new\ntransaction record is created, …\n"],["table_commands","ApplicationHelper","ApplicationHelper.html#method-i-table_commands","(object, show, edit, delete, type)","<p>Creates HTML elements for the table actions with the administration area\nThe visible actions are dependent …\n"],["tax_rate","Store","Store.html#method-c-tax_rate","()","<p>Returns a divided value of the tax rate in the Store settings, ready for\nuse in calculations\n<p>@returns …\n"],["tier","Order","Order.html#method-i-tier","(cart)","<p>Calculate the relevant shipping tier for an order, taking into account\nlength, thickness and weight of …\n"],["to_h","DeepStruct","DeepStruct.html#method-i-to_h","()",""],["total_price","Cart","Cart.html#method-i-total_price","()","<p>Calculates the total price of a cart\n<p>@return [decimal]\n"],["total_price","CartItem","CartItem.html#method-i-total_price","()","<p>Calculates the total price of a cart item by multipling the item price by\nit&#39;s quantity\n<p>@return [decimal] …\n"],["total_price","OrderItem","OrderItem.html#method-i-total_price","()","<p>Calculates the total price of an order item by multipling the item price by\nit&#39;s quantity\n<p>@return …\n"],["transfer","Order","Order.html#method-i-transfer","(cart)","<p>Upon completing an order, transfer the cart item data to new order item\nrecords\n"],["update","AccessoriesController","AccessoriesController.html#method-i-update","()","<p>Update accessory\n<p>Modal trigger for displaying a form to update the accessory selection on\nthe product …\n"],["update","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-update","()","<p>Updating an accessory\n<p>If the accessory is not associated with orders, update the current record.\nElse …\n"],["update","Admin::AdminController","Admin/AdminController.html#method-i-update","()",""],["update","Admin::CategoriesController","Admin/CategoriesController.html#method-i-update","()","<p>PUT /categories/1 PUT /categories/1.json\n"],["update","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-update","()","<p>PUT /zones/1 PUT /zones/1.json\n"],["update","Admin::CountriesController","Admin/CountriesController.html#method-i-update","()","<p>PUT /countries/1 PUT /countries/1.json\n"],["update","Admin::OrdersController","Admin/OrdersController.html#method-i-update","()","<p>PUT /orders/1 PUT /orders/1.json\n"],["update","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-update","()","<p>PUT /attribute_types/1 PUT /attribute_types/1.json\n"],["update","Admin::Products::SkusController","Admin/Products/SkusController.html#method-i-update","()","<p>Updating a SKU\n<p>If the SKU is not associated with orders, update the current record. Else\ncreate a new …\n"],["update","Admin::ProductsController","Admin/ProductsController.html#method-i-update","()",""],["update","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-update","()","<p>PUT /tiers/1 PUT /tiers/1.json\n"],["update","Admin::ShippingsController","Admin/ShippingsController.html#method-i-update","()","<p>Updating a shipping\n<p>If the accessory is not associated with orders, update the current record.\nElse create …\n"],["update","Admin::TransactionsController","Admin/TransactionsController.html#method-i-update","()",""],["update","Admin::UsersController","Admin/UsersController.html#method-i-update","()",""],["update","CartItemsController","CartItemsController.html#method-i-update","()",""],["update","Orders::BuildController","Orders/BuildController.html#method-i-update","()","<p>When advancing to the next step in the order process, the update method is\ncalled Any bespoke business …\n"],["update","ShippingsController","ShippingsController.html#method-i-update","()","<p>Update shipping results\n<p>When selecting a shipping country in the order process, the shipping\nresults are …\n"],["update","SkusController","SkusController.html#method-i-update","()","<p>Update SKU\n<p>Modal trigger for displaying a form to update the SKU selection on the\nproduct page\n"],["update_quantity","CartItem","CartItem.html#method-i-update_quantity","(quantity, accessory)","<p>Updates the quantity of a cart item, taking into account associated\naccessories\n<p>@return [object]\n"],["update_weight","CartItem","CartItem.html#method-i-update_weight","(quantity, weight, accessory)","<p>Updates the weight of a cart item, taking into account associated\naccessories\n<p>@return [object]\n"],["user_permissions","Ability","Ability.html#method-i-user_permissions","(user)",""],["validate_each","TierValidator","TierValidator.html#method-i-validate_each","(record, attribute, value)",""],["warning","Mailatron4000::Stock","Mailatron4000/Stock.html#method-c-warning","()",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}