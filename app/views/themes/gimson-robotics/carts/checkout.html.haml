- content_for :title, 'Checkout'

.container
  .row
    / ==========
    / = Main content =
    / ==========
    %section.span12
      .checkout-container
        .row
          .span10.offset1
            / ==========
            / = Header =
            / ==========
            %header
              .row
                .span6.offset2
                  .center-align
                    %h1
                      %span.light Checkout
                .span2
            / ==========
            / = Checkout form
            / ==========
            = form_for @order, url: confirm_carts_path, html: { method: :post, :class => 'row form-checkout remote-form' } do |f|
              .span6.content
                .theiaStickySidebar
                  %h3 Billing address
                  %hr
                  = f.fields_for :billing_address do |fff|
                    .row
                      .span3
                        .control-group
                          = fff.label :first_name, :class => 'control-label' do
                            First name
                            %span.red-clr.bold *
                          .controls
                            = fff.text_field :first_name, :id => 'billing_first_name', tabindex: 1, :class => 'copy-billing', 'data-field-name' => 'first-name'
                            = errors_for @order, 'billing_address.first_name'
                        .control-group
                          = f.label :email, :class => 'control-label' do
                            Email
                            %span.red-clr.bold *
                          .controls
                            = f.text_field :email, id: 'email', tabindex: 14
                            = errors_for @order, :email
                        .control-group
                          = fff.label :telephone, :class => 'control-label' do
                            Telephone
                            %span.red-clr.bold *
                          .controls
                            = fff.text_field :telephone, :id => 'billing_telephone', tabindex: 3, :class => 'copy-billing', 'data-field-name' => 'telephone'
                            = errors_for @order, 'billing_address.telephone'
                        .control-group
                          = fff.label :city, :class => 'control-label' do
                            City
                            %span.red-clr.bold *
                          .controls
                            = fff.text_field :city, :id => 'billing_city', tabindex: 7, :class => 'copy-billing', 'data-field-name' => 'city'
                            = errors_for @order, 'billing_address.city'
                        .control-group
                          = fff.label :county, :class => 'control-label' do
                            County
                          .controls
                            = fff.text_field :county, :id => 'billing_county', tabindex: 9, :class => 'copy-billing', 'data-field-name' => 'county'
                            = errors_for @order, 'billing_address.county'
                      .span3
                        .control-group
                          = fff.label :last_name, :class => 'control-label' do
                            Last name
                            %span.red-clr.bold *
                          .controls
                            = fff.text_field :last_name, :id => 'billing_last_name', tabindex: 2, :class => 'copy-billing', 'data-field-name' => 'last-name'
                            = errors_for @order, 'billing_address.last_name'
                        .control-group
                          = fff.label :company, :class => 'control-label' do
                            Company
                          .controls
                            = fff.text_field :company, :id => 'billing_company', tabindex: 4, :class => 'copy-billing', 'data-field-name' => 'company'
                            = errors_for @order, 'billing_address.company'
                        .control-group
                          = fff.label :address, :class => 'control-label' do
                            Street address
                            %span.red-clr.bold *
                          .controls
                            = fff.text_field :address, :id => 'billing_address', tabindex: 6, :class => 'copy-billing', 'data-field-name' => 'address'
                            = errors_for @order, 'billing_address.address'
                        .control-group
                          = fff.label :postcode, :class => 'control-label' do
                            Postcode
                            %span.red-clr.bold *
                          .controls
                            = fff.text_field :postcode, :id => 'billing_postcode', tabindex: 8, :class => 'copy-billing', 'data-field-name' => 'postcode'
                            = errors_for @order, 'billing_address.postcode'
                        .control-group
                          = fff.label :country, :class => 'control-label' do
                            Country
                            %span.red-clr.bold *
                          .controls
                            = fff.select(:country, options_for_select(Country.all.map { |country| [country.name, country.name ] }, selected: selected_country(current_cart, @order.billing_address.country)), { include_blank: 'Please select...'}, tabindex: 10)
                            = errors_for @order, 'billing_address.country'
                  %h3 Payment details
                  %hr
                  .control-group.payment-options
                    .controls
                      .checkbox
                        = radio_button_tag :payment_type, 'express-checkout', checked: true, tabindex: 11
                        = image_tag 'paypal-icon.png'
                        %p
                          Payment by Debit or Credit Card (PayPal account not required)
                    - if Store::settings.cheque
                      .controls
                        .checkbox
                          = radio_button_tag :payment_type, 'cheque'
                          Cheque
                    - if Store::settings.bank_transfer
                      .controls
                        .checkbox
                          = radio_button_tag :payment_type, 'bank-transfer'
                          Bank transfer
                  %h3 Delivery address
                  %hr
                  = f.fields_for :delivery_address do |ff|
                    .row
                      .span6
                        .control-group
                          .controls
                            .checkbox
                              = check_box_tag :use_billing_address
                              Use the billing address
                      .span3
                        .control-group
                          = ff.label :first_name, :class => 'control-label' do
                            First name
                            %span.red-clr.bold *
                          .controls
                            = ff.text_field :first_name, id: 'delivery_first_name', tabindex: 12, 'data-field-name' => 'delivery-first-name'
                            = errors_for @order, 'delivery_address.first_name'
                        .control-group
                          = ff.label :company, :class => 'control-label' do
                            Company
                          .controls
                            = ff.text_field :company, id: 'delivery_company', tabindex: 16, 'data-field-name' => 'delivery-company'
                            = errors_for @order, 'delivery_address.company'
                        .control-group
                          = ff.label :city, :class => 'control-label' do
                            City
                            %span.red-clr.bold *
                          .controls
                            = ff.text_field :city, id: 'delivery_city', tabindex: 18, 'data-field-name' => 'delivery-city'
                            = errors_for @order, 'delivery_address.city'
                        .control-group
                          = ff.label :county, :class => 'control-label' do
                            County
                          .controls
                            = ff.text_field :county, id: 'delivery_county', tabindex: 20, 'data-field-name' => 'delivery-county'
                            = errors_for @order, 'delivery_address.county'
                        .control-group
                          = ff.label :country, :class => 'control-label' do
                            Country
                            %span.red-clr.bold *
                          .controls.update-delivery-service-price
                            = ff.select(:country, options_for_select(Country.all.map { |country| [country.name, country.name] }, selected_country(current_cart, @order.delivery_address.country)), { include_blank: 'Please select...'}, tabindex: 21)
                            = errors_for @order, 'delivery_address.country'
                      .span3
                        .control-group
                          = ff.label :last_name, :class => 'control-label' do
                            Last name
                            %span.red-clr.bold *
                          .controls
                            = ff.text_field :last_name, id: 'delivery_last_name', tabindex: 13, 'data-field-name' => 'delivery-last-name'
                            = errors_for @order, 'delivery_address.last_name'
                        .control-group
                          = ff.label :telephone, :class => 'control-label' do
                            Telephone
                            %span.red-clr.bold *
                          .controls
                            = ff.text_field :telephone, id: 'delivery_telephone', tabindex: 15, 'data-field-name' => 'delivery-telephone'
                            = errors_for @order, 'delivery_address.telephone'
                        .control-group
                          = ff.label :address, :class => 'control-label' do
                            Street address
                            %span.red-clr.bold *
                          .controls
                            = ff.text_field :address, id: 'delivery_address', tabindex: 17, 'data-field-name' => 'delivery-address'
                            = errors_for @order, 'delivery_address.address'
                        .control-group
                          = f.label :postcode, :class => 'control-label' do
                            Postcode
                            %span.red-clr.bold *
                          .controls
                            = ff.text_field :postcode, id: 'delivery_postcode', tabindex: 19, 'data-field-name' => 'delivery-postcode'
                            = errors_for @order, 'delivery_address.postcode'
                    .delivery-service-prices
                      .control-group
                        = f.label :delivery_id, :class => 'control-label' do
                          Delivery options
                          %span.red-clr.bold *
                        .controls
                          - unless @delivery_id.nil?
                            = render partial: theme_presenter.page_template_path("carts/delivery_service_prices/fields"), format: [:html], locals: { delivery_service_prices: @delivery_service_prices, delivery_id: @delivery_id, field_target: 'order[delivery_id]' }
                          - else
                            %p.delivery_service_price_notice Select a country to view the available delivery services.
                            .control-group
                              .controls
                                = errors_for @order, :delivery_id
              .span4.sidebar
                .theiaStickySidebar
                  %h3 Order summary
                  %hr
                  %table.table.table-items.order-summary
                    %thead
                      %tr
                        %th{colspan: "2"} Item
                        %th
                          .align-center Quantity
                        %th
                          .align-right Price
                    %tbody
                      - current_cart.cart_items.each do |item|
                        %tr
                          %td.image
                            = image_tag item.sku.product.attachments.first.file.square, :alt => item.sku.product.name, :height => 75, :width => 75
                          %td.desc
                            = item.sku.product.name
                            %div= render_variants(item.sku) unless item.sku.product.single?
                          %td.qty= item.quantity
                          %td.price= Store::Price.new(price: item.price).single
                        - unless item.cart_item_accessory.blank?
                          %tr.accessory_row
                            %td
                              %div
                                = image_tag 'gimson-robotics/including-accessory.jpg'
                            %td.desc
                              = item.cart_item_accessory.accessory.name
                            %td.qty
                      - if Store::settings.tax_breakdown
                        %tr
                          %td.stronger.light{colspan: "2"} Subtotal:
                          %td.stronger.light{colspan: "2"}
                            .align-right= Store::Price.new(price: @cart_total[:net_amount]).single
                      %tr{ :class => Store::settings.tax_breakdown ? 'no-border' : nil}
                        %td.stronger.light{colspan: "2"}
                          Delivery:
                          %div.normal= current_cart.estimate_delivery.full_name unless current_cart.estimate_delivery.nil?
                        %td.stronger.light{colspan: "2"}
                          - if current_cart.estimate_delivery.nil?
                            No method selected
                          - else
                            = Store::Price.new(price: current_cart.estimate_delivery.price).single
                      - if Store::settings.tax_breakdown
                        %tr.no-border
                          %td.stronger.light{colspan: "2"}
                            = "#{Store::settings.tax_name} (#{Store::settings.tax_rate}%):"
                          %td.stronger.light{colspan: "2"}
                            .align-right= Store::Price.new(price: @cart_total[:tax_amount]).single
                      %tr
                        %td.stronger.size-16{colspan: "2"} Order Total:
                        %td.stronger{colspan: "2"}
                          .size-16.align-right.total_price= Store::Price.new(price: @cart_total[:gross_amount], tax_type: 'net').single
                  .control-group
                    .controls
                      .checkbox
                        = f.check_box :terms, checked: false, tabindex: 22
                        = errors_for @order, :terms
                        Tick this box to acknowledge that you have read and agree with our terms and conditions.
                  %p
                    = f.submit 'Place Order', :class => 'btn btn-primary higher bold checkout_order', tabindex: 23

    / /main content
/ /container
#checkoutOrderModal.modal.fade{"aria-hidden" => "false", "aria-labelledby" => "checkoutOrderModal", role: "dialog", tabindex: "-1"}
  .modal-header
    %h3#checkoutOrderModal
      %span.light Validating
      your order
  .modal-body
    %p Please wait while we validate your order and redirect you to your chosen payment provider.
    %div.loading-block