- content_for :title, 'Checkout'

.container
  .row
    / ==========
    / = Main content =
    / ==========
    %section.span12
      .checkout-container
        .row
          .span10.offset1
            / ==========
            / = Header =
            / ==========
            %header
              .row
                .span6.offset2
                  .center-align
                    %h1
                      %span.light Checkout
                .span2
            / ==========
            / = Checkout form
            / ==========
            = form_for @order, url: confirm_carts_path, html: { method: :post, :class => 'row form-checkout remote-form' } do |f|
              .span6.content
                .theiaStickySidebar
                  %h3 Delivery address
                  %hr
                  = f.fields_for :delivery_address do |ff|
                    .row
                      .span3
                        .control-group
                          = ff.label :first_name, :class => 'control-label' do
                            First name
                            %span.red-clr.bold *
                          .controls
                            = ff.text_field :first_name, :class => 'use-billing', id: 'delivery_first_name'
                            = errors_for @order, 'delivery_address.first_name'
                        .control-group
                          = f.label :email, :class => 'control-label' do
                            Email
                            %span.red-clr.bold *
                          .controls
                            = f.text_field :email, id: 'email'
                            = errors_for @order, :email
                        .control-group
                          = ff.label :company, :class => 'control-label' do
                            Company
                          .controls
                            = ff.text_field :company, :class => 'use-billing', id: 'delivery_company'
                            = errors_for @order, 'delivery_address.company'
                        .control-group
                          = ff.label :city, :class => 'control-label' do
                            City
                            %span.red-clr.bold *
                          .controls
                            = ff.text_field :city, :class => 'use-billing', id: 'delivery_city'
                            = errors_for @order, 'delivery_address.city'
                        .control-group
                          = ff.label :county, :class => 'control-label' do
                            County
                          .controls
                            = ff.text_field :county, :class => 'use-billing', id: 'delivery_county'
                            = errors_for @order, 'delivery_address.county'
                      .span3
                        .control-group
                          = ff.label :last_name, :class => 'control-label' do
                            Last name
                            %span.red-clr.bold *
                          .controls
                            = ff.text_field :last_name, :class => 'use-billing', id: 'delivery_last_name'
                            = errors_for @order, 'delivery_address.last_name'
                        .control-group
                          = ff.label :telephone, :class => 'control-label' do
                            Telephone
                          .controls
                            = ff.text_field :telephone, :class => 'use-billing', id: 'delivery_telephone'
                            = errors_for @order, 'delivery_address.telephone'
                        .control-group
                          = ff.label :address, :class => 'control-label' do
                            Street address
                            %span.red-clr.bold *
                          .controls
                            = ff.text_field :address, :class => 'use-billing', id: 'delivery_address'
                            = errors_for @order, 'delivery_address.address'
                        .control-group
                          = f.label :postcode, :class => 'control-label' do
                            Postcode
                            %span.red-clr.bold *
                          .controls
                            = ff.text_field :postcode, :class => 'use-billing', id: 'delivery_postcode'
                            = errors_for @order, 'delivery_address.postcode'
                        .control-group
                          = ff.label :country, :class => 'control-label' do
                            Country
                            %span.red-clr.bold *
                          .controls.update-delivery-service-price
                            = ff.select(:country, options_for_select(Country.all.map { |country| [country.name, country.name] }, selected_country(current_cart, @order.delivery_address)), { include_blank: 'Please select...'})
                            = errors_for @order, 'delivery_address.country'
                  .delivery-service-prices
                    .control-group
                      = f.label :delivery_id, :class => 'control-label' do
                        Delivery options
                        %span.red-clr.bold *
                      .controls
                        - unless @delivery_id.nil?
                          = render partial: theme_presenter.page_template_path("carts/delivery_service_prices/fields"), format: [:html], locals: { delivery_service_prices: @delivery_service_prices, delivery_id: @delivery_id, field_target: 'order[delivery_id]' }
                        - else
                          %p.delivery_service_price_notice Select a country to view the available delivery services.
                          .control-group
                            .controls
                              = errors_for @order, :delivery_id
                  %h3 Payment details
                  %hr
                  .control-group
                    = image_tag 'paypal-icon.png'
                    .controls
                      = radio_button_tag :payment_type, 'express-checkout', checked: true
                    - if Store::settings.cheque
                      .controls
                        = radio_button_tag :payment_type, 'cheque'
                        Cheque
                    - if Store::settings.bank_transfer
                      .controls
                        = radio_button_tag :payment_type, 'bank-transfer'
                        Bank transfer

                  %h3 Billing address
                  %hr
                  = f.fields_for :billing_address do |fff|
                    .row
                      .span3
                        .control-group
                          = fff.label :first_name, :class => 'control-label' do
                            First name
                            %span.red-clr.bold *
                          .controls
                            = fff.text_field :first_name, :id => 'billing_first_name'
                            = errors_for @order, 'billing_address.first_name'
                        .control-group
                          = fff.label :telephone, :class => 'control-label' do
                            Telephone
                          .controls
                            = fff.text_field :telephone, :id => 'billing_telephone'
                            = errors_for @order, 'billing_address.telephone'
                        .control-group
                          = f.label :tax_number, :class => 'control-label' do
                            Tax number
                          .controls
                            = f.text_field :tax_number, :id => 'tax_number'
                            = errors_for @order, 'billing_address.tax_number'
                        .control-group
                          = fff.label :city, :class => 'control-label' do
                            City
                            %span.red-clr.bold *
                          .controls
                            = fff.text_field :city, :id => 'billing_city'
                            = errors_for @order, 'billing_address.city'
                        .control-group
                          = fff.label :county, :class => 'control-label' do
                            County
                          .controls
                            = fff.text_field :county, :id => 'billing_county'
                            = errors_for @order, 'billing_address.county'
                      .span3
                        .control-group
                          = fff.label :last_name, :class => 'control-label' do
                            Last name
                            %span.red-clr.bold *
                          .controls
                            = fff.text_field :last_name, :id => 'billing_last_name'
                            = errors_for @order, 'billing_address.last_name'
                        .control-group
                          = fff.label :company, :class => 'control-label' do
                            Company
                          .controls
                            = fff.text_field :company, :id => 'billing_company'
                            = errors_for @order, 'billing_address.company'
                        .control-group
                          = fff.label :address, :class => 'control-label' do
                            Street address
                            %span.red-clr.bold *
                          .controls
                            = fff.text_field :address, :id => 'billing_address'
                            = errors_for @order, 'billing_address.address'
                        .control-group
                          = fff.label :postcode, :class => 'control-label' do
                            Postcode
                            %span.red-clr.bold *
                          .controls
                            = fff.text_field :postcode, :id => 'billing_postcode'
                            = errors_for @order, 'billing_address.postcode'
                        .control-group
                          = fff.label :country, :class => 'control-label' do
                            Country
                            %span.red-clr.bold *
                          .controls
                            = fff.select(:country, options_for_select(Country.all.map { |country| [country.name, country.name ] }, selected: selected_country(current_cart, @order.billing_address)), { include_blank: 'Please select...'})
                            = errors_for @order, 'billing_address.country'
                  = f.check_box :terms, checked: false
                  = errors_for @order, :terms
                  %p Tick this box to acknowledge that you have read and agree with our terms and conditions.
                  = f.submit 'Place Order', :class => 'btn btn-primary higher bold'
              .span4.sidebar
                .theiaStickySidebar
                  %h3 Order summary
                  %hr
                  %table.table.table-items.order-summary
                    %thead
                      %tr
                        %th{colspan: "2"} Item
                        %th
                          .align-center Quantity
                        %th
                          .align-right Price
                    %tbody
                      - current_cart.cart_items.each do |item|
                        %tr
                          %td.image
                            = image_tag item.sku.product.attachments.first.file.square, :alt => item.sku.product.name, :height => 124, :width => 124
                          %td.desc
                            = item.sku.product.name
                            %div= sku_attribute_values(item.sku, item.sku.product.single)
                          %td.qty= item.quantity
                          %td.price= Store::Price.new(price: item.price).single
                        - unless item.cart_item_accessory.blank?
                          %tr.accessory_row
                            %td.image
                              = image_tag 'http://placehold.it/124x124', :height => 124, :width => 124
                            %td.desc
                              = item.cart_item_accessory.accessory.name
                            %td.qty
                              = item.cart_item_accessory.quantity
                      - if Store::settings.tax_breakdown
                        %tr
                          %td.stronger{colspan: "3"} Subtotal:
                          %td.stronger
                            .align-right= Store::Price.new(price: @cart_total[:net_amount]).single
                      %tr{ :class => Store::settings.tax_breakdown ? 'no-border' : nil}
                        %td.stronger{colspan: "3"}
                          Delivery:
                          %div.normal= current_cart.estimate_delivery.full_name unless current_cart.estimate_delivery.nil?
                        %td.stronger
                          .align-right= Store::Price.new(price: cart_delivery_price(current_cart.estimate_delivery)).single
                      - if Store::settings.tax_breakdown
                        %tr.no-border
                          %td.stronger{colspan: "3"}= "#{Store::settings.tax_name} (#{Store::settings.tax_rate}%):"
                          %td.stronger
                            .align-right= Store::Price.new(price: @cart_total[:tax_amount]).single
                      %tr
                        %td.stronger{colspan: "3"} Order Total:
                        %td.stronger
                          .size-16.align-right.total_price= Store::Price.new(price: @cart_total[:gross_amount], tax_type: 'net').single
                  %p 
                    = f.submit 'Place Order', :class => 'btn btn-primary higher bold confirm_order'

    / /main content
/ /container