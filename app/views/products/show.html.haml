- content_for :title, @product.name
- content_for :breadcrumb, @product.name
- store_breadcrumb_add @product.category.name, category_path(@product.category)
- content_for :meta_description, @product.meta_description
/ ==========
/ = Breadcrumbs =
/ ==========
= render_breadcrumbs 1
/ ==========
/ = Main container =
/ ==========
.container
  .push-up.top-equal.blocks-spacer
    / ==========
    / = Product =
    / ==========
    .row.blocks-spacer
      / ==========
      / = Preview Images =
      / ==========
      .span5
        .product-preview
          .picture
            = image_tag @product.attachments.first.file.large, :id => "mainPreviewImg", :alt => @product.name, :width => 500, :height => 375
          .thumbs.clearfix
            - @product.attachments.each_with_index do |image, index|
              .thumb{:class => "#{ "active" if index == 0 }"}
                %a{href: "#mainPreviewImg"}
                  = image_tag image.file.large, :width => 940, :height => 940
      / ==========
      / = Title and short desc =
      / ==========
      .span7
        .product-title
          %h1.name= @product.name
          %hr/
        .product-description
          %p= raw @product.short_description
          %hr/
          .row
            = form_for @cart_item, :html => { :method => :post, :remote => true, :class => 'form form-inline clearfix product_sku_form' } do |f|
              .span5
                = Store::Price.new(@skus.first.price).markup
                .quantity Quantity:
                .numbered
                  = f.text_field :quantity, :value => 1, :class => 'tiny-size'
                  %span.clickable.add-one.fa.fa-plus-square
                  %span.clickable.remove-one.fa.fa-minus-square
                - if @product.single
                  = f.hidden_field :sku_id, :value => @product.skus.first.id
                - else
                  = f.select :sku_id, options_for_select(@skus.map { |sku| [sku_attribute_values(sku, sku.product.single), sku.id ] } )
                - unless @product.accessories.active.empty?
                  = f.fields_for @cart_item_accessory do |ff|
                    = ff.select :accessory_id, options_for_select(@product.accessories.active.map { |a| [accessory_details(a), a.id]}), :prompt => "Select accessory"
              .span2
                %div.stock
                  - if @skus.first.stock > 0
                    %span.btn.btn-success In Stock
                  - else 
                    %span.btn.btn-danger Out of Stock
                - if @skus.first.stock > 0
                  = button_tag(:type => 'submit', :class => 'btn btn-danger pull-right add_to_cart', 'data-tracking' => 'true', 'data-tracking-category' => 'add-to-cart', 'data-tracking-name' => "#{@product.id}-#{@product.slug}") do
                    %i.fa.fa-shopping-cart
                    \Â  Add To Cart
                - else
                  %a.btn.btn-warning.pull-right.notify_me{href: "#"}
                    %i.fa.fa-envelope
                    = " Notify Me"
          %hr
    / ==========
    / = Tabs with more info =
    / ==========
    .row
      .span12
        %ul#myTab.nav.nav-tabs
          %li.active
            %a{"data-toggle" => "tab", href: "#tab-1"} Product description
          %li
            %a{"data-toggle" => "tab", href: "#tab-2"} Technical details
        .tab-content
          #tab-1.fade.in.tab-pane.active
            %p=raw @product.description
          #tab-2.fade.in.tab-pane
            %p= raw @product.specification
/ /container
- if @product.category.products.count > 1
  / ==========
  / = Related Products =
  / ==========
  .boxed-area.no-bottom
    .container
      / ==========
      / = Title =
      / ==========
      .row
        .span12
          .main-titles.lined
            %h2.title
              %span.light Related
              Products
      / ==========
      / = Related products =
      / ==========
      .row
        - @product.category.products.first(4).each do |product|
          - if product == @product
            - next
          / ==========
          / = Products =
          / ==========
          .span3
            .product
              .product-inner
                .product-img
                  .picture
                    = link_to (image_tag product.attachments.first.file.large, :alt => product.name, :width => 540, :height => 374), [product.category, product]
                .main-titles.no-margin
                  %h5.no-margin.isotope--title= link_to (truncate product.name, length: 35), [product.category, product]
                  = Store::Price.new(product.skus.first.price, product.skus.count).range
                  %p= product.meta_description
          / /product
#notify_me_form
  - unless @skus.first.stock > 0
    = render partial: 'products/notify/modal', locals: { sku: @skus.first, notification: @notification }
