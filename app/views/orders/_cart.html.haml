- current_cart.cart_items.each do |item|
  %tr
    %td.image
      = link_to (image_tag item.sku.product.attachments.first.file.square, :alt => item.sku.product.name, :height => 124, :width => 124), [item.sku.product.category, item.sku.product]
    %td.desc
      = item.sku.product.name
      = link_to item, :method => :delete, :remote => true, :title => 'Remove item' do
        %i.fa.fa-times-circle
      %div= sku_attribute_values(item.sku, item.sku.product.single)
    %td.qty
      = form_for item, :remote => true do |f|
        = f.text_field :quantity, :value => item.quantity, :class => 'tiny-size'
    %td.price= Store::Price.new(item.total_price).format
  - unless item.cart_item_accessory.blank?
    %tr.accessory_row
      %td.image
        = image_tag 'http://placehold.it/124x124', :alt => item.cart_item_accessory.accessory.name, :height => 124, :width => 124
      %td.desc
        = item.cart_item_accessory.accessory.name
      %td.qty
        = item.cart_item_accessory.quantity
- unless session[:estimate_price].nil? && session[:estimate_shipping].nil? && session[:estimate_country].nil?
  %tr
    %td.image
      = image_tag "delivery.png", :alt => session[:estimate_shipping]
    %td.desc
      = session[:estimate_shipping]
      = link_to purge_estimate_order_build_path, :method => :delete, :remote => true, :title => 'Remove item' do
        %i.fa.fa-times-circle
      %div= session[:estimate_country]
    %td.qty
    %td.price= Store::Price.new(session[:estimate_price]).format
- if Store::settings.tax_breakdown
  %tr
    %td{colspan: "2"}
    \ 
    %td.stronger Subtotal:
    %td.stronger
      .align-right= Store::Price.new(current_cart.total_price).format
  %tr
    %td{colspan: "2", rowspan: "1"}
    \ 
    %td.stronger= "#{Store::settings.tax_name} (#{Store::settings.tax_rate}%):"
    %td.stronger
      .align-right= Store::Price.new((current_cart.total_price*Store::tax_rate)).format
%tr
  %td{colspan: "2", rowspan: "2"}
%tr
  %td.stronger Total:
  %td.stronger
    .size-16.align-right.total_price= Store::Price.new(session[:estimate_price].nil? ? current_cart.total_price : (current_cart.total_price + session[:estimate_price]), 'gross').format
