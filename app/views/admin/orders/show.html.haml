- content_for :title, "Order ##{@order.id}"
- content_for :breadcrumb, "##{@order.id}"
- breadcrumb_add 'Orders', admin_orders_path

.twelvecol
  .page-header
    %h2.widget.widget-header= "Order ##{@order.id}"
.row
  .fourcol
    .widget-sub-heading
      %h3 Shipping details
    .widget.widget-content
      %ul
        %li
          %i.icon-envelop
          = succeed ":" do
            %b Email
          = @order.email
        %li
          %i.icon-location
          = succeed ":" do
            %b Status
          = status_label @order, @order.shipping_status
        %li
          %i.icon-calendar
          = succeed ":" do
            %b Dispatch date
          = @order.shipping_date.strftime(" #{@order.shipping_date.day.ordinalize} %b %Y") unless @order.shipping_date.nil? 
        %li
          %i.icon-coin
          = succeed ":" do
            %b Actual shipping cost
          = Store::Price.new(@order.actual_shipping_cost, 'net').single unless @order.actual_shipping_cost.nil?
        %li
          %i.icon-airplane
          = succeed ":" do
            %b Delivery option
          = @order.delivery.full_name
  .fourcol
    .widget-sub-heading
      %h3 Billing address
    .widget.widget-content
      = @order.billing_address.full_name
      %br/
      = @order.billing_address.address
      %br/
      = @order.billing_address.city
      %br/
      = @order.billing_address.postcode
      %br/
      = @order.billing_address.country
      %br/
      %br/
      = @order.billing_address.telephone
      %br/
  .fourcol.last
    .widget-sub-heading
      %h3 Shipping address
    .widget.widget-content
      = @order.delivery_address.full_name
      %br/
      = @order.delivery_address.address
      %br/
      = @order.delivery_address.city
      %br/
      = @order.delivery_address.postcode
      %br/
      = @order.delivery_address.country
      %br/
      %br/
      = @order.delivery_address.telephone
      %br/
.row
  .twelvecol
    .widget-sub-heading
      %h3 Order items
    .table-responsive
      %table.table.table-striped.table-bordered.table-hover.table-margin
        %thead
          %tr
            %th Item
            %th SKU
            %th Price
            %th Qty
            %th Total
        %tbody
          - @order.order_items.each do |item|
            %tr
              %td
                = link_to item.sku.product.name, [item.sku.product.category, item.sku.product]
                .item-sub= sku_attribute_values item.sku, item.sku.product.single
                - unless item.order_item_accessory.nil?
                  .item-sub.label.label-blue= "<i class='icon-code-fork'></i> #{item.order_item_accessory.accessory.name}".html_safe
              %td= item.sku.full_sku
              %td= Store::Price.new(item.price, 'net').single
              %td= item.quantity
              %td= Store::Price.new(item.total_price, 'net').single
          %tr
            %td.align-right.border-top{colspan: "4"}
              %b Subtotal:
            %td.border-top= Store::Price.new(@order.net_amount, 'net').single
          %tr
            %td.align-right{colspan: "4"}
              %b Delivery/handling:
            %td= Store::Price.new(@order.delivery.price, 'net').single
          %tr
            %td.align-right{colspan: "4"}
              %b Tax:
            %td= Store::Price.new(@order.tax_amount, 'net').single
          %tr.focused
            %td.align-right{colspan: "4"}
              %b Total:
            %td= Store::Price.new(@order.gross_amount, 'net').single
    .widget-sub-heading
      %h3 Transactions
    .table-responsive
      %table.table.table-striped.table-bordered.table-hover
        %thead
          %tr
            %th Transaction Type
            %th Payment type
            %th PayPal ID
            %th Payment status
            %th Error code
            %th Fee
            %th Net amount
            %th Gross amount
            %th Last updated
            %th
        %tbody
          - @order.transactions.each do |transaction|
            %tr{:id => "transaction_#{transaction.id}" }
              %td= transaction.transaction_type
              %td= transaction.payment_type 
              %td= link_to transaction.paypal_id, "#{Global.paypal.transaction_link}#{transaction.paypal_id}", :target => '_blank' if transaction.paypal_id
              %td= status_label transaction, transaction.payment_status
              %td= transaction.error_code.nil? ? "-" : transaction.error_code
              %td= Store::Price.new(transaction.fee, 'net').single
              %td= Store::Price.new(transaction.net_amount, 'net').single
              %td= Store::Price.new(transaction.gross_amount, 'net').single
              %td.align-left= transaction.updated_at.strftime('%B %-d, %Y, %I:%M %P')
              - if transaction.payment_status == 'Pending' && transaction.payment_type != 'express-checkout'
                = table_commands transaction, nil, nil, nil, 3
              - else
                %td
#transaction-modal
